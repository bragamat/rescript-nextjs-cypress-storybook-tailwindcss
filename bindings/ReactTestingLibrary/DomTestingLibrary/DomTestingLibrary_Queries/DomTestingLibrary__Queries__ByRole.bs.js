// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Js_undefined from "rescript/lib/es6/js_undefined.js";
import * as Dom from "@testing-library/dom";

function makeByRoleOptions(exact, selector, name, param) {
  return {
          NAME: "WithString",
          VAL: {
            name: Js_undefined.fromOption(name),
            selector: Js_undefined.fromOption(selector),
            exact: Js_undefined.fromOption(exact)
          }
        };
}

function makeByRoleOptionsWithRegex(exact, selector, name, param) {
  return {
          NAME: "WithRegExp",
          VAL: {
            name: Js_undefined.fromOption(name),
            selector: Js_undefined.fromOption(selector),
            exact: Js_undefined.fromOption(exact)
          }
        };
}

function makeByRoleOptionsWithFunction(exact, selector, name, param) {
  return {
          NAME: "WithFunction",
          VAL: {
            name: Js_undefined.fromOption(name),
            selector: Js_undefined.fromOption(selector),
            exact: Js_undefined.fromOption(exact)
          }
        };
}

function getByRole(options, matcher, element) {
  var options$1 = Belt_Option.getWithDefault(options, {
        NAME: "NoOptions",
        VAL: undefined
      });
  return Dom.getByRole(element, matcher.VAL, options$1.VAL);
}

function findByRole(options, matcher, element) {
  return Dom.findByRole(element, matcher.VAL, options);
}

function getAllByRole(options, matcher, element) {
  return Dom.getAllByRole(element, matcher.VAL, options);
}

function queryAllByRole(options, matcher, element) {
  return Dom.queryAllByRole(element, matcher.VAL, options);
}

function findAllByRole(options, matcher, element) {
  return Dom.findAllByRole(element, matcher.VAL, options);
}

export {
  makeByRoleOptions ,
  makeByRoleOptionsWithRegex ,
  makeByRoleOptionsWithFunction ,
  getByRole ,
  findByRole ,
  getAllByRole ,
  queryAllByRole ,
  findAllByRole ,
}
/* @testing-library/dom Not a pure module */
